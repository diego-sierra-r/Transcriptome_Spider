}else if (between == "DIET wide") {
combinations <<- create_comb(granulate = F) %>%
as.data.frame() %>% arrange(V1,V2)
counter <- 0
sliced_dataframes <- list()
for (i in as.data.frame(t(combinations))) { #crear dataframe para expresion diferenciasl por dieta
counter <- counter +1
slice <- slice_countdata(countData = CountData, index = counter)
sliced_dataframes[[length(sliced_dataframes)+1]] <- slice
rm(slice)
}
names(sliced_dataframes) <- set_diet_names()
counter <- 0
DESeq2_diets <- list()
for (i in sliced_dataframes) {
col_index <- paste(as.data.frame(t(combinations))[[counter+1]][1],
as.data.frame(t(combinations))[[counter+1]][2],sep = "|")
DESeq2_diets[[length(DESeq2_diets)+1]] <- DE(count = i,
col =
filter(Coldata,
grepl(col_index,Grupo_intra)),
design = as.formula(" ~ SEX + DIET"),
lfc = lfc)
counter <- counter +1
print(glue("Differential expression between {names(sliced_dataframes)[counter]} done. \n {counter}/{length(sliced_dataframes)}"))
}
names(DESeq2_diets)<- set_diet_names()
return(DESeq2_diets)
}else if (between == "DIET granulate") {
combinations <<- create_comb(granulate = T) %>%
as.data.frame() %>% arrange(V1,V2)
counter <- 0
sliced_dataframes <- list()
for (i in as.data.frame(t(combinations))) { #crear dataframe para expresion diferenciasl por dieta
counter <- counter +1
slice <- slice_countdata(countData = CountData, index = counter)
sliced_dataframes[[length(sliced_dataframes)+1]] <- slice
rm(slice)
}
names(sliced_dataframes) <- set_diet_names()
counter <- 0
DESeq2_diets <- list()
for (i in sliced_dataframes) {
col_index <- paste(as.data.frame(t(combinations))[[counter+1]][1],
as.data.frame(t(combinations))[[counter+1]][2],sep = "|")
DESeq2_diets[[length(DESeq2_diets)+1]] <- DE(count = i,
col =
filter(Coldata,
grepl(col_index,Grupo_intra)),
design = as.formula(" ~ Grupo_intra"),
lfc = lfc)
counter <- counter +1
print(glue("Differential expression between {names(sliced_dataframes)[counter]} done. \n {counter}/{length(sliced_dataframes)}"))
}
names(DESeq2_diets)<- set_diet_names()
return(DESeq2_diets)
}
}
#lfc = c(-1.5,1.5)
#DESeq2_sex <-  AutoDE(between = "SEX",lfc = c(-1.5,1.5))
#DESeq2_diet_wide <-  AutoDE(between = "DIET wide", lfc = c(-1.5,1.5))
#DESeq2_diet_granulate <-  AutoDE(between = "DIET granulate",lfc = c(-1.5,1.5))
# create folders
folder_names <- list(c(-1,1),c(-1.5,1.5),c(-2,2))
for (i in folder_names) {
if (dir.exists(paste0(getwd(),"/Results_DE","/lfc ",paste(as.character(i),collapse = " ")))) {
print("The folder already exists")
} else {
paste0(getwd(),"/Results_DE","/lfc ",paste(as.character(i),collapse = " ")) |> dir.create(recursive = T)
}
}
Annot <-read.csv(paste0(dataPath,"/ev_filtered_without_dup_for_cat.csv"))
for (i in folder_names) {
DESeq2_sex <-  AutoDE(between = "SEX",lfc = i)
openxlsx::write.xlsx(DESeq2_sex[[1]],paste0(getwd(),"/Results_DE","/lfc ",paste(as.character(i),collapse = " "),"/","DE_SEX",paste(as.character(i),collapse = "_"),".xlsx"))
DESeq2_sex_filtered <- filter(DESeq2_sex[[1]], differex != "Not significant")
openxlsx::write.xlsx(CountData[rownames(CountData) %in% DESeq2_sex_filtered$Contig_Name,],paste0(getwd(),"/Results_DE","/lfc ",paste(as.character(i),collapse = " "),"/","raw_counts_sex",paste(as.character(i),collapse = "_"),".xlsx"))
DE_merged <- merge(x = DESeq2_sex_filtered,
y = Annot, by = "Contig_Name", all.x= T )
#DE_merged <- DE_merged[!duplicated(DE_merged$Contig_Name),]
DE_annoted_and_DE <- filter(DE_merged,
grepl("^K", Kegg_code) | evalue <= 2.20e-15)
openxlsx::write.xlsx(DE_annoted_and_DE,paste0(getwd(),"/Results_DE","/lfc ",paste(as.character(i),collapse = " "),"/","SEX_Transcripts_DE_and_annotated",paste(as.character(i),collapse = "_"),".xlsx"))
vsd_0 <- vst(DESeq2_sex[[1]], blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
}
vsd_0 <- vst(DESeq2_sex[[1]], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex, blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex, blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[1], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[[1]], blind = F) # calcualte dispersion trend
dds_sex <- DESeqDataSetFromMatrix(countData=CountData,
colData=Coldata,
design =  ~ SEX)
dds_sex <- DESeqDataSetFromMatrix(countData=CountData,
colData=Coldata,
design =  ~ SEX)
keep <- rowSums(counts(dds_sex)) >= 10 #prefiltrar un numero minimo de conteos
dds_sex <- dds_sex[keep,]
dds_sex <- dds_sex[keep,]
dds_sex <- DESeqDataSetFromMatrix(countData=CountData,
colData=Coldata,
design =  ~ SEX)
keep <- rowSums(counts(dds_sex)) >= 10 #prefiltrar un numero minimo de conteos
dds_sex <- dds_sex[keep,]
register(MulticoreParam(7))
dds_sex <- dds_sex %>%
DESeq(., parallel = T)
dds_sex |> class()
dds_sex_results <- dds_sex %>%
results() %>%
as.data.frame()
dds_sex_results <- dds_sex_results %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds_sex, blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[1], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[2], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[[[1]]], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[[1]], blind = F) # calcualte dispersion trend
vsd_0 <- vst(DESeq2_sex[[1]], blind = F) # calcualte dispersion trend
DESeq2_sex[[1]]
dds_sex |> class()
get_MDS <- function(lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc)
DESeq2 <- DESeq2 %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
}
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc)
DESeq2 <- DESeq2 %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
return(F_vr_M_DESeq2_MDS)
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
x <- get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
class(x)
x
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
x
dds <- DESeqDataSetFromMatrix(countData=CountData,
colData=Coldata,
design = as.formula("~ SEX"))
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = 1)
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
mds |> class()
colnames(mds)
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) #+
F_vr_M_DESeq2_MDS
View(mds)
library(ggrepel)
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3)
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
#geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3)
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
#geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 3) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 0.5) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 0.01) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 0.01) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = mds$ID_sample), size = 0.01) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = mds$ID_sample), size = 2.5) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 2.5) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
F_vr_M_DESeq2_MDS
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 2.5,m) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
return(F_vr_M_DESeq2_MDS)
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
get_MDS <- function(count,col,design,lfc) {
dds <- DESeqDataSetFromMatrix(countData=count,
colData=col,
design = design)
register(MulticoreParam(7))
keep <- rowSums(counts(dds)) >= 10 #prefliter
dds <- dds[keep,]
dds <- DESeq(dds, parallel = T)
DESeq2 <- results(dds, alpha = 0.05, lfcThreshold = lfc[2])
DESeq2 <- DESeq2 %>% as.data.frame() %>%
mutate(., differex =(case_when(log2FoldChange >= 2 & padj <= 0.05 ~ "UP",
log2FoldChange <= -2 & padj <= 0.05 ~ "DOWN",
log2FoldChange <= 2 | log2FoldChange >= 2 & padj >0.05 ~ "Not significant"))) %>% drop_na()
vsd_0 <- vst(dds, blind = F) # calcualte dispersion trend
sampleDists <- dist(t(assay(vsd_0))) #Calculate distance matrix
sampleDistMatrix <- as.matrix( sampleDists ) # Create distance matrix
mdsData <- data.frame(cmdscale(sampleDistMatrix)) #perform MDS
mds <- cbind(mdsData, as.data.frame(colData(vsd_0)))
F_vr_M_DESeq2_MDS <-  ggplot(mds, aes(X1,X2,color=SEX)) +
geom_label_repel(aes(label = ID_sample), size = 2.5) +
geom_point(size=3) +
scale_color_manual(values =  c("#B22222","#8B008B"),
labels = c("Female", "Male"),
name = "Sex") +
labs(title = "Females vr Males DESeq2",
x = "Dim 1",
y = "Dim 2") +
theme_classic2()
return(F_vr_M_DESeq2_MDS)
}
get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
x <- get_MDS(CountData,Coldata,as.formula("~ SEX"),lfc = c(-1,1))
x
x
x
1 +1
2+2
getwd()
